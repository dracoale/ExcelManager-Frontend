@model automatizacion.Models.FileXlsx

@{
    ViewData["Title"] = "upload";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Subir Archivo xlsx</h2>
<form asp-controller="FileXlsx" asp-action="upload" method="post" enctype="multipart/form-data" class="d-flex gap-2">
    <input type="file" name="file" class="form-control" required />
    <button type="submit" class="btn btn-primary"> Subir </button>

</form>
<h1 class="text-center mt-4">Dividir Columnas en Diferentes Hojas</h1>

<div class="container">
    <h1 class="text-center mt-4">Acciones</h1>
    <h5>Selecciona cuántas hojas quieres y luego asigna las columnas:</h5>

    <!-- Formulario para ingresar la cantidad de hojas -->
    <form id="hojasForm">
        <div>
            <label>Cantidad de hojas:</label>
            <input type="number" id="cantidadHojas" min="1" value="2" class="form-control" />
        </div>
    </form>

    <!-- Formulario principal para asignar columnas a hojas -->
    <form method="post" asp-action="GuardarDividir" id="Formulario">
        <table class="table">
            <thead>
                <tr>
                    <th>Columna</th>
                    <th>Seleccionar Hoja</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var columna in Model.header)
                {
                    <tr>
                        <td>@columna</td>
                        <td>
                            <select name="seleccionados[@columna]" class="form-select hoja-select">
                                <!-- Opciones de hojas se llenarán dinámicamente -->
                            </select>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button  class="btn btn-success mt-3">
            <span id="btnText">Dividir Excel</span>
            <span id="loadingSpinner" class="spinner-border spinner-border-sm d-none"></span>
        </button>
    </form>



    
</div>
@section Scripts {
<script>
        $(document).ready(function () {
            $("#Formulgario").submit(function (event) {
                event.preventDefault(); // Evita la recarga de la página

                var formData = new FormData(this);

                $("#btnDividir").prop("disabled", true);
                $("#btnText").hide();
                $("#loadingSpinner").removeClass("d-none");

                $.ajax({
                    url: "/FileXlsx/GuardarDividir",
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    xhrFields: {
                        responseType: 'blob' // Recibir la respuesta como un archivo
                    },
                    success: function (data, status, xhr) {
                        
                        var filename = "arch.xlsx";
                      

                        // Crear un Blob y un enlace de descarga
                        var blob = new Blob([data], { type: xhr.getResponseHeader("Content-Type") });
                        var link = document.createElement("a");
                        link.href = window.URL.createObjectURL(blob);
                        link.download = filename;

                        // Simular el clic para descargar
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);
                    },
                    error: function () {
                        alert("Error al procesar.");
                    },
                    complete: function () {
                        $("#btnDividir").prop("disabled", false);
                        $("#btnText").show();
                        $("#loadingSpinner").addClass("d-none");
                    }
                });
            });
        });
           
        document.addEventListener("DOMContentLoaded", function () {
            const cantidadHojasInput = document.getElementById("cantidadHojas");

            function actualizarSelects() {
                let cantidad = parseInt(cantidadHojasInput.value) || 1;
                let opciones = "";

                for (let i = 1; i <= cantidad; i++) {
                    opciones += `<option value="Hoja ${i}">Hoja ${i}</option>`;
                }

                document.querySelectorAll(".hoja-select").forEach(select => {
                    select.innerHTML = opciones;
                });
            }

            
            actualizarSelects();

            // Escuchar cambios en el input de cantidad de hojas
            cantidadHojasInput.addEventListener("input", actualizarSelects);
        });
   

</script>
}
